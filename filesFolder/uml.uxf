<diagram program="umletino" version="15.1"><zoom_level>2</zoom_level><help_text>Space for diagram note</help_text><element><id>UMLPackage</id><coordinates><x>184</x><y>145</y><w>222</w><h>200</h></coordinates><panel_attributes>Controller
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>188</x><y>157</y><w>52</w><h>46</h></coordinates><panel_attributes>administrator_controller.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>165</y><w>44</w><h>14</h></coordinates><panel_attributes>Class
AdministratorList
group=0
-
get(): list[Administrator]
post(str, str): AdministratorsSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>183</y><w>44</w><h>14</h></coordinates><panel_attributes>Class
AdministratorDetail
group=0
-
put(int, int): AdministratorsSchema
delete(int): JSONResponse</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>248</x><y>165</y><w>50</w><h>18</h></coordinates><panel_attributes>Class
CourseList
group=0
-
get(): list[Course]
post(CoursePostSchema): CourseSchema
put(CoursePostSchema): CourseSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>244</x><y>157</y><w>60</w><h>46</h></coordinates><panel_attributes>course.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>248</x><y>187</y><w>50</w><h>12</h></coordinates><panel_attributes>Class
DeleteCourses
group=0
-
delete(): JSONResponse</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>310</x><y>157</y><w>38</w><h>24</h></coordinates><panel_attributes>period.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>314</x><y>165</y><w>30</w><h>12</h></coordinates><panel_attributes>Class
PeriodList
group=0
-
get(): list[PeriodSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>188</x><y>211</y><w>130</w><h>74</h></coordinates><panel_attributes>program.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>219</y><w>54</w><h>22</h></coordinates><panel_attributes>Class
HandleProgram
group=0
-
get(): list[ProgramSchema]
post(ProgramPostSchema): ProgramSchema
put(ProgramPostSchema): ProgramSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>247</y><w>58</w><h>14</h></coordinates><panel_attributes>Class
GetDepartments
group=0
-
get():{departments: list[DepartmentListSchema]}</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>267</y><w>30</w><h>14</h></coordinates><panel_attributes>Class
HandleProgramID
group=0
-
get(): ProgramSchema
delete(): None</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>226</x><y>267</y><w>22</w><h>14</h></coordinates><panel_attributes>Class
ProgramImage
group=0
-
get(int): Image</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>254</x><y>223</y><w>58</w><h>14</h></coordinates><panel_attributes>Class
RelatedCourse
group=0
-
get(int): list[CourseSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>256</x><y>245</y><w>52</w><h>16</h></coordinates><panel_attributes>self
group=0
-
filter_programs(bool): list[ProgramSchema]
upload_file(FileStorage, str): None
allowed_file(str): str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>358</x><y>157</y><w>38</w><h>24</h></coordinates><panel_attributes>roles_controller.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>165</y><w>30</w><h>12</h></coordinates><panel_attributes>Class
PeriodList
group=0
-
get(): list[RoleSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>330</x><y>195</y><w>64</w><h>58</h></coordinates><panel_attributes>search.py
group=0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>332</x><y>203</y><w>60</w><h>12</h></coordinates><panel_attributes>Class
ProgramSearch
group=0
-
post(SearchProgramSchema): list[ProgramSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>332</x><y>219</y><w>60</w><h>12</h></coordinates><panel_attributes>Class
SearchCoursesByManyThemes
group=0
-
post(ThemeSearchSchema): list[CourseSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>332</x><y>237</y><w>60</w><h>12</h></coordinates><panel_attributes>Class
SearchCoursesByManyThemes
group=0
-
post(ThemeSearchSchema): list[ProgramSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>322</x><y>265</y><w>78</w><h>58</h></coordinates><panel_attributes>semester.py
group=01,0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>324</x><y>271</y><w>54</w><h>14</h></coordinates><panel_attributes>Class
SemesterList
group=0
group=01
-
get(): list[SemesterSchema]
post(SemesterPostSchema): SemesterSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>324</x><y>289</y><w>60</w><h>14</h></coordinates><panel_attributes>Class
SemesterDetail
group=01
-
put(SemesterUpdateSchema int): SemesterSchema
delete(int): JSONResponse</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>324</x><y>307</y><w>34</w><h>12</h></coordinates><panel_attributes>Class
SemesterCourseList
group=01
-
get(int): list[CourseSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>362</x><y>307</y><w>34</w><h>12</h></coordinates><panel_attributes>Class
SemesterCoursePagination
group=01
-
get(int): list[CourseSchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>270</x><y>289</y><w>42</w><h>20</h></coordinates><panel_attributes>showing.py
group=04</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>272</x><y>295</y><w>38</w><h>12</h></coordinates><panel_attributes>self
group=04
-
get_showings(): Response
handle_showing(int): Response</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>190</x><y>299</y><w>54</w><h>38</h></coordinates><panel_attributes>theme.py
group=02</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>305</y><w>48</w><h>16</h></coordinates><panel_attributes>Class
ThemeList
group=02
-
get(): list[ThemeSchema]
post(ThemePostSchema): ThemeSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>192</x><y>323</y><w>40</w><h>10</h></coordinates><panel_attributes>self
group=02
-
handle_theme_id(int): Response</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>254</x><y>315</y><w>46</w><h>24</h></coordinates><panel_attributes>user_controller.py
group=03</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>260</x><y>321</y><w>34</w><h>16</h></coordinates><panel_attributes>Class
UserDetail
group=03
-
get(): AdministratorsSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>428</x><y>155</y><w>236</w><h>200</h></coordinates><panel_attributes>Data_model
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>436</x><y>165</y><w>64</w><h>34</h></coordinates><panel_attributes>administrator_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>438</x><y>173</y><w>54</w><h>22</h></coordinates><panel_attributes>self
group=1
-
get_administrators(): list[Administrator]
get_administrator(int): Administrator
update_administrator(int, dict): Administrator
delete_administrator(int): None
create_administrator(dict): Administrator</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>514</x><y>165</y><w>66</w><h>40</h></coordinates><panel_attributes>course_dao
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>516</x><y>173</y><w>62</w><h>28</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Course]
get_by_id(int): Course or None
get_semester_courses_as_pages(int, int): list[Course]
insert_course(Course): bool
insert_many(list[Course]): bool
update_course(Course): bool
delete_course(int): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>434</x><y>207</y><w>66</w><h>40</h></coordinates><panel_attributes>faculty_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>436</x><y>215</y><w>62</w><h>28</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Course]
get_by_id(int): Course or None
get_semester_courses_as_pages(int, int): list[Course]
insert_course(Course): bool
insert_many(list[Course]): bool
update_course(Course): bool
delete_course(int): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>514</x><y>211</y><w>66</w><h>24</h></coordinates><panel_attributes>helpers.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>516</x><y>219</y><w>62</w><h>12</h></coordinates><panel_attributes>self
group=1
-
get_or_create(session, model, **kwargs): session
create(session, model, **kwargs): model</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>590</x><y>165</y><w>68</w><h>30</h></coordinates><panel_attributes>imit_db.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>594</x><y>173</y><w>56</w><h>18</h></coordinates><panel_attributes>self
group=1
-
create_roles(*args, **kwargs): None
create_admins(*args, **kwargs): None
create_periods(*args, **kwargs): None
create_themes(*args, **kwargs): None</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>590</x><y>201</y><w>62</w><h>24</h></coordinates><panel_attributes>permissions.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>594</x><y>209</y><w>50</w><h>12</h></coordinates><panel_attributes>self
group=1
-
require_roles(list[RoleEnum]): Permission</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>598</x><y>231</y><w>50</w><h>42</h></coordinates><panel_attributes>program_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>602</x><y>239</y><w>42</w><h>32</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Program]
get_by_id(int): Program or None
search_by_title(str): list[Program]
insert(Program): None
update(dict, int): Program
delete(int): bool
get_departments(): list[str]
search(**kwargs): list[Program]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>558</x><y>251</y><w>26</w><h>10</h></coordinates><panel_attributes>self
group=1
-
get_roles(): list[Role]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>556</x><y>243</y><w>32</w><h>22</h></coordinates><panel_attributes>role_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>436</x><y>255</y><w>60</w><h>40</h></coordinates><panel_attributes>semester_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>440</x><y>263</y><w>50</w><h>26</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Semester] or None
get_by_filter(bool): list[Semester] or None
get_by_id(int): Semester or None
insert_semester(Semester): bool
update_semester(Semester): bool
delete_semester(Semester): None</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>438</x><y>301</y><w>88</w><h>42</h></coordinates><panel_attributes>showing_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>442</x><y>309</y><w>82</w><h>30</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Showing] or None
get_by_id(int): Showing or None
insert(Showing): None
update(dict): None
delete(int): bool
get_showing_by_datetime_expression(BinaryExpression): list[Showing]
add_show_to_program(Showing, int): None</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>502</x><y>269</y><w>56</w><h>32</h></coordinates><panel_attributes>subject_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>506</x><y>275</y><w>48</w><h>22</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Subject] or None
get_by_id(int): Subject or None
insert(Subject): None
delete(int): bool
get_subject_by_name(bool): list[Subject]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>576</x><y>297</y><w>64</w><h>50</h></coordinates><panel_attributes>theme_dao.py
group=1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>580</x><y>305</y><w>54</w><h>38</h></coordinates><panel_attributes>self
group=1
-
get_all(): list[Theme]
get_from_program(int): list[Theme]
get_from_course(int): list[Theme]
get_by_id(int): Theme
get_by_name(str): Theme
insert(Theme): None
insert_from_list(list[str]): None
insert(Theme): bool
delete(int): None
classify_program(Program, bool): list[Theme]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>206</x><y>369</y><w>206</w><h>176</h></coordinates><panel_attributes>schemas
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>214</x><y>381</y><w>40</w><h>78</h></coordinates><panel_attributes>AdministratorsSchema.py
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>216</x><y>391</y><w>30</w><h>16</h></coordinates><panel_attributes>Class
RoleSchema
group=2
-
id: int
role: RoleEnum
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>216</x><y>413</y><w>32</w><h>18</h></coordinates><panel_attributes>Class
AdministratorsSchema
group=2
-
id: int
unity_id: str
role: RoleSchema</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>216</x><y>437</y><w>34</w><h>18</h></coordinates><panel_attributes>Class
AdministratorsPostSchema
group=2
-
role_id: int
unity_id: str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>262</x><y>381</y><w>44</w><h>126</h></coordinates><panel_attributes>course.py
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>264</x><y>391</y><w>30</w><h>16</h></coordinates><panel_attributes>Class
SubjectSchema
group=2
-
id: int
subject: str
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>264</x><y>413</y><w>38</w><h>46</h></coordinates><panel_attributes>Class
CoursePostSchema
group=2
-
id: int
title_short: str
title_long: str
description: str
subject: str
catalog_number: int
faculty: str
emails: str
semester_id: int
faculty_list: list[FacultySchema]
topics_description: str
course_id: int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>264</x><y>463</y><w>38</w><h>40</h></coordinates><panel_attributes>Class
CourseSchema
group=2
-
id: int
title_short: str
title_long: str
description: str
subject: SubjectSchema
catalog_number: int
semester_id: int
topics_description: str
themes: list[ThemeSchema]
faculty: list[FacultySchema]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>218</x><y>469</y><w>26</w><h>30</h></coordinates><panel_attributes>faculty.py
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>220</x><y>477</y><w>20</w><h>18</h></coordinates><panel_attributes>Class
FacultySchema
group=2
-
id: int
name: str
email: str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>216</x><y>507</y><w>26</w><h>30</h></coordinates><panel_attributes>period.py
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>218</x><y>515</y><w>20</w><h>18</h></coordinates><panel_attributes>Class
PeriodSchema
group=2
-
id: int
period: PeriodEnum</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>314</x><y>381</y><w>92</w><h>128</h></coordinates><panel_attributes>program.py
group=2</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>316</x><y>389</y><w>38</w><h>26</h></coordinates><panel_attributes>Class
ShowingSchema
group=2
-
id: int
datetime: str
location: str
price: str
program_id: int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>316</x><y>419</y><w>38</w><h>26</h></coordinates><panel_attributes>Class
ShowingPostSchema
group=2
-
id: int
datetime: str
location: str
datetime: str
price: str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>316</x><y>451</y><w>38</w><h>26</h></coordinates><panel_attributes>Class
ShowingPostSchema
group=2
-
id: int
datetime: str
location: str
datetime: str
price: str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>316</x><y>481</y><w>38</w><h>24</h></coordinates><panel_attributes>Class
ShowingPutSchema
group=2
-
id: int
datetime: str
location: str
price: str
state: str</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>362</x><y>389</y><w>38</w><h>14</h></coordinates><panel_attributes>Class
DepartmentListSchema
group=2
-
departments: list[str]
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>362</x><y>409</y><w>38</w><h>36</h></coordinates><panel_attributes>Class
ProgramSchema
group=2
-
id: int
department: str
link: str
title: str
description: str
image_filename: str
themes: list[ThemeSchema]
showings: list[ShowingSchema]
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>362</x><y>449</y><w>36</w><h>28</h></coordinates><panel_attributes>Class
ProgramPostSchema
group=2
-
id: int
title: str
department: str
description: str
link: str
showings: str
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>362</x><y>479</y><w>42</w><h>28</h></coordinates><panel_attributes>Class
ProgramPutSchema
group=2
-
id: int
title: str
department: str
link: str
description: str
showings: list[ShowingPutSchema]
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>490</x><y>401</y><w>80</w><h>88</h></coordinates><panel_attributes>Tagging
group=3</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>504</x><y>417</y><w>50</w><h>46</h></coordinates><panel_attributes>Class
Classifier
group=3
-
themes: list[Theme]
course_title: str
description: str
nlp: spacyModel
-
__init__(list[Theme, str, str]): None
set_themes(list[Theme]): None
add_theme(Theme): None
set_description(str): None
set_course_title(str): None
preprocess_text(str): str
vectorize(list[Theme], str):list[list[list[]]]
classify(): list[Theme]


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>496</x><y>409</y><w>64</w><h>64</h></coordinates><panel_attributes>improved_classifier.py
group=3</panel_attributes><additional_attributes></additional_attributes></element></diagram>